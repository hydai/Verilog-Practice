// Code Segment starts at 0
@0
0000010_10000_00000_00000_0000000000
//  init:       ADD  R16, R0, R0
0100010_01001_00000__000001000000000
//              ADI  R9, R0, #512
0100010_10001_00000__000010000000000
//              ADI  R17, R0, #1024
0100010_10010_00000__000000000000001
//              ADI  R18, R0, #1
//  ;; Load 512~516 to R1~R5
0010000_00001_01001__000000000000000
//              LD   R1, M[R9]
0000010_01001_01001_10010_0000000000
//              ADD  R9, R9, R18
0010000_00010_01001__000000000000000
//              LD   R2, M[R9]
0000010_01001_01001_10010_0000000000
//              ADD  R9, R9, R18
0010000_00011_01001__000000000000000
//              LD   R3, M[R9]
0000010_01001_01001_10010_0000000000
//              ADD  R9, R9, R18
0010000_00100_01001__000000000000000
//              LD   R4, M[R9]
0000010_01001_01001_10010_0000000000
//              ADD  R9, R9, R18
0010000_00101_01001__000000000000000
//              LD   R5, M[R9]
//  ;; Let R6 be 512 
0000010_00110_00000_00000_0000000000
//              ADD  R6, R0, R0
0100010_01001_00000__000001000000000
//              ADI  R9, R0, #512
0000010_00110_00110_10010_0000000000
//  loop:       ADD  R6, R6, R18
0000101_01000_01001_00110_0000000000
//              SUB  R8, R9, R6
1001000_00000_01000__111111111111110
//              BNZ  R8, loop (-2)
//  ;; Load word from 512 to 535 
0000010_01010_01001_00000_0000000000
//              ADD  R10, R9, R0
0100010_01011_00000__000001000010111
//              ADI  R11, R0, #535
0000010_01100_01010__000000000000000
//  loop:       LD  R12, M[R10]
//  ;; Add R1~R5 to it
0000010_01100_01100_00001_0000000000
//              ADD  R12, R12, R1
0000010_01100_01100_00010_0000000000
//              ADD  R12, R12, R2
0000010_01100_01100_00011_0000000000
//              ADD  R12, R12, R3
0000010_01100_01100_00100_0000000000
//              ADD  R12, R12, R4
0000010_01100_01100_00101_0000000000
//              ADD  R12, R12, R5
//  ;; Save it to from 1024~1047
0100000_00000_10001_01100_0000000000
//              ST   M[R17], R12
0000010_10001_10001_10010_0000000000
//              ADD  R17, R17, R18
//  ;; Increment loop counter
0100010_01010_01010__000000000000001
//              ADI  R10, R10, #1
0000101_01101_01011_01010_0000000000
//              SUB  R13, R11, R10
1001000_00000_01101__111111111111110
//              BNZ  R13, loop2 (-10)


0000000_00000_00000__000000000000000  //          NOP
0000000_00000_00000__000000000000000  //          NOP
0000000_00000_00000__000000000000000  //          NOP
0000000_00000_00000__000000000000000  //          NOP
0000000_00000_00000__000000000000000  //          NOP
1111111_11111_11111__111111111111111  //          HALT
1111111_11111_11111__111111111111111  //          HALT
1111111_11111_11111__111111111111111  //          HALT
1111111_11111_11111__111111111111111  //          HALT
1111111_11111_11111__111111111111111  //          HALT

